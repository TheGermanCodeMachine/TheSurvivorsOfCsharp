// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheSurvivorsOfCsharp.Data;

namespace TheSurvivorsOfCsharp.Migrations
{
    [DbContext(typeof(TheSurvivorsOfCsharpContext))]
    partial class TheSurvivorsOfCsharpContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TheSurvivorsOfCsharp.Model.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LecturerID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Since")
                        .HasColumnType("int");

                    b.Property<int>("UniversityID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("LecturerID");

                    b.HasIndex("UniversityID");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("TheSurvivorsOfCsharp.Model.CourseMajor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CoursID")
                        .HasColumnType("int");

                    b.Property<int?>("CourseID")
                        .HasColumnType("int");

                    b.Property<int>("MajorID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CourseID");

                    b.HasIndex("MajorID");

                    b.ToTable("CourseMajor");
                });

            modelBuilder.Entity("TheSurvivorsOfCsharp.Model.Lecturer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TitleAndName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UniversityID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UniversityID");

                    b.ToTable("Lecturer");
                });

            modelBuilder.Entity("TheSurvivorsOfCsharp.Model.Major", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Major");
                });

            modelBuilder.Entity("TheSurvivorsOfCsharp.Model.MajorUniversity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MajorID")
                        .HasColumnType("int");

                    b.Property<int>("UniversityID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MajorID");

                    b.HasIndex("UniversityID");

                    b.ToTable("MajorUniversity");
                });

            modelBuilder.Entity("TheSurvivorsOfCsharp.Model.Rating", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContactHours")
                        .HasColumnType("int");

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<int>("Interesting")
                        .HasColumnType("int");

                    b.Property<int>("Learned")
                        .HasColumnType("int");

                    b.Property<int>("Organized")
                        .HasColumnType("int");

                    b.Property<int>("OverallRating")
                        .HasColumnType("int");

                    b.Property<bool>("PassedFirstTime")
                        .HasColumnType("bit");

                    b.Property<int>("Presentation")
                        .HasColumnType("int");

                    b.Property<int>("SelfStudyHours")
                        .HasColumnType("int");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CourseID");

                    b.HasIndex("StudentID");

                    b.ToTable("Rating");
                });

            modelBuilder.Entity("TheSurvivorsOfCsharp.Model.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AreaOfStudies")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UniversityID")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("UniversityID");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("TheSurvivorsOfCsharp.Model.University", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("University");
                });

            modelBuilder.Entity("TheSurvivorsOfCsharp.Model.Course", b =>
                {
                    b.HasOne("TheSurvivorsOfCsharp.Model.Lecturer", "Lecturer")
                        .WithMany("Courses")
                        .HasForeignKey("LecturerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TheSurvivorsOfCsharp.Model.University", "University")
                        .WithMany("Courses")
                        .HasForeignKey("UniversityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TheSurvivorsOfCsharp.Model.CourseMajor", b =>
                {
                    b.HasOne("TheSurvivorsOfCsharp.Model.Course", "Course")
                        .WithMany("CourseMajors")
                        .HasForeignKey("CourseID");

                    b.HasOne("TheSurvivorsOfCsharp.Model.Major", "Major")
                        .WithMany("CourseMajors")
                        .HasForeignKey("MajorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TheSurvivorsOfCsharp.Model.Lecturer", b =>
                {
                    b.HasOne("TheSurvivorsOfCsharp.Model.University", "University")
                        .WithMany("Lecturers")
                        .HasForeignKey("UniversityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TheSurvivorsOfCsharp.Model.MajorUniversity", b =>
                {
                    b.HasOne("TheSurvivorsOfCsharp.Model.Major", "Major")
                        .WithMany("MajorUniversities")
                        .HasForeignKey("MajorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TheSurvivorsOfCsharp.Model.University", "University")
                        .WithMany("MajorUniversities")
                        .HasForeignKey("UniversityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TheSurvivorsOfCsharp.Model.Rating", b =>
                {
                    b.HasOne("TheSurvivorsOfCsharp.Model.Course", "Course")
                        .WithMany("Ratings")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TheSurvivorsOfCsharp.Model.Student", "Student")
                        .WithMany("Ratings")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TheSurvivorsOfCsharp.Model.Student", b =>
                {
                    b.HasOne("TheSurvivorsOfCsharp.Model.University", "University")
                        .WithMany("Students")
                        .HasForeignKey("UniversityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
